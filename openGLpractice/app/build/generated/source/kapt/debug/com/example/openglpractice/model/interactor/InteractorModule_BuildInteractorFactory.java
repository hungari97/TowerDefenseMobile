// Generated by Dagger (https://google.github.io/dagger).
package com.example.openglpractice.model.interactor;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class InteractorModule_BuildInteractorFactory implements Factory<BuildInteractor> {
  private final InteractorModule module;

  public InteractorModule_BuildInteractorFactory(InteractorModule module) {
    this.module = module;
  }

  @Override
  public BuildInteractor get() {
    return Preconditions.checkNotNull(
        module.buildInteractor(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static InteractorModule_BuildInteractorFactory create(InteractorModule module) {
    return new InteractorModule_BuildInteractorFactory(module);
  }

  public static BuildInteractor proxyBuildInteractor(InteractorModule instance) {
    return Preconditions.checkNotNull(
        instance.buildInteractor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
