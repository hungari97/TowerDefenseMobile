// Generated by Dagger (https://google.github.io/dagger).
package com.example.openglpractice.view;

import com.example.openglpractice.model.interactor.BuildInteractor;
import com.example.openglpractice.presenter.GamePresenter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class UIModule_GamePresenterFactory implements Factory<GamePresenter> {
  private final UIModule module;

  private final Provider<BuildInteractor> buildInteractorProvider;

  public UIModule_GamePresenterFactory(
      UIModule module, Provider<BuildInteractor> buildInteractorProvider) {
    this.module = module;
    this.buildInteractorProvider = buildInteractorProvider;
  }

  @Override
  public GamePresenter get() {
    return Preconditions.checkNotNull(
        module.gamePresenter(buildInteractorProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static UIModule_GamePresenterFactory create(
      UIModule module, Provider<BuildInteractor> buildInteractorProvider) {
    return new UIModule_GamePresenterFactory(module, buildInteractorProvider);
  }

  public static GamePresenter proxyGamePresenter(
      UIModule instance, BuildInteractor buildInteractor) {
    return Preconditions.checkNotNull(
        instance.gamePresenter(buildInteractor),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
